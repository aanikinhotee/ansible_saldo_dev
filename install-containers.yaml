- hosts: all
  remote_user: root
  become: yes
  tasks:
    - name: Create db container
      docker_container:
        name: db_test
        image: "postgres:latest"
        env:
          POSTGRES_PASSWORD: mysecretpassword
        ports:
          - "5432:5432"
      vars:
        ansible_python_interpreter: /usr/bin/python3


    - name: Create keycloak container
      docker_container:
        name: keycloak_test
        image: "quay.io/keycloak/keycloak:10.0.2"
        env:
          KEYCLOAK_USER: admin
          KEYCLOAK_PASSWORD: admin
        ports:
          - "8080:8080"
          - "8443:8443"
        volumes:
          - "keycloak-db:/opt/jboss/keycloak/standalone/data:rw"
      vars:
        ansible_python_interpreter: /usr/bin/python3

    - name: Install tomcat
      become_user: tomcat
      become: yes
      get_url:
        url: https://downloads.apache.org/tomcat/tomcat-9/v9.0.38/bin/apache-tomcat-9.0.38.tar.gz
        dest: /home/tomcat/apache-tomcat-9.0.38.tar.gz

    - name: Ansible check file exists example.
      stat:
        path: /home/tomcat/apache-tomcat-9.0.38
      register: file_details

    - name: Extract /home/tomcat/apache-tomcat-9.0.38.tar.gz into /home/tomcat/apache-tomcat-9.0.38
      become_user: tomcat
      become: yes
      unarchive:
        src: /home/tomcat/apache-tomcat-9.0.38.tar.gz
        dest: /home/tomcat/
        remote_src: yes
      when: not file_details.stat.exists

    - name: Clean artifact path
      become_user: tomcat
      become: yes
      file:
        state: absent
        path: /home/tomcat/apache-tomcat-9.0.38/webapps
      when: not file_details.stat.exists

    - name: Create a directory if it does not exist
      become_user: tomcat
      become: yes
      file:
        path: /home/tomcat/apache-tomcat-9.0.38/webapps
        state: directory
        mode: '0755'

    - name: add tomcat.service file
      copy:
        src: tomcat.service
        dest: /etc/systemd/system/tomcat.service

    - name: add server.xml file
      copy:
        src: server.xml
        dest: /home/tomcat/apache-tomcat-9.0.38/conf/server.xml

    - name: add saldo-api-logback.xml file
      become_user: tomcat
      become: yes
      copy:
        src: saldo-api-logback.xml
        dest: /home/tomcat/saldo-api-logback.xml


    - name: add saldo-api-environment.properties file
      become_user: tomcat
      become: yes
      template:
        src: saldo-api-environment.properties
        dest: /home/tomcat/saldo-api-environment.properties
        owner: tomcat
        group: tomcat
        mode: u=rw,g=r,o=r

    - name: Enable service tomcat, and not touch the state
      service:
        name: tomcat
        enabled: yes

    - name: Start tomcat httpd, if not started
      service:
        name: tomcat
        state: started

    - name: install psql
      yum:
        name: https://download.postgresql.org/pub/repos/yum/12/redhat/rhel-7.8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present

    - name: install postgresql
      yum:
        name: postgresql12
        state: present


    - name: copy create_empty_db.sql file
      copy:
        src: create_empty_db.sql
        dest: /home/tomcat/create_empty_db.sql

    - name: collect information about saldo db
      shell: PGPASSWORD=mysecretpassword psql -h localhost -U postgres -lqt | cut -d \| -f 1 | grep -qw saldo; echo $?
      register: dbstat
      changed_when: false

    - name: debug
      debug:
        var: dbstat

    - name: install saldo db
      shell: PGPASSWORD=mysecretpassword psql -h localhost -U postgres -f /home/tomcat/create_empty_db.sql
      when: dbstat['stdout'] == "1"


    - name: add run_oracle.sh file
      copy:
        src: run_oracle.sh
        dest: /root/run_oracle.sh

    - name: add run_etcd.sh file
      copy:
        src: run_etcd.sh
        dest: /root/run_etcd.sh
